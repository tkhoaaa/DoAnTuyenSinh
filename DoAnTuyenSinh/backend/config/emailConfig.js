// C·∫•u h√¨nh email cho h·ªá th·ªëng tuy·ªÉn sinh HUTECH
export const emailConfig = {
    // C·∫•u h√¨nh SMTP
    smtp: {
        service: process.env.EMAIL_SERVICE || 'gmail',
        host: process.env.EMAIL_HOST || 'smtp.gmail.com',
        port: process.env.EMAIL_PORT || 587,
        secure: process.env.EMAIL_SECURE === 'true' || false,
        auth: {
            user: process.env.EMAIL_USER || 'khoa0372243036@gmail.com',
            pass: process.env.EMAIL_PASSWORD || 'rexkbshgxwzqaxmw'
        }
    },

    // Th√¥ng tin ng∆∞·ªùi g·ª≠i
    from: {
        name: process.env.EMAIL_FROM_NAME || 'HUTECH Tuy·ªÉn sinh',
        email: process.env.EMAIL_USER || 'noreply@hutech.edu.vn'
    },

    // URL frontend
    frontendUrl: process.env.FRONTEND_URL || 'http://localhost:5173',

    // C·∫•u h√¨nh template
    templates: {
        welcome: {
            subject: 'Ch√†o m·ª´ng ƒë·∫øn v·ªõi H·ªá th·ªëng Tuy·ªÉn sinh HUTECH',
            template: 'welcome'
        },
        passwordReset: {
            subject: 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - H·ªá th·ªëng Tuy·ªÉn sinh HUTECH',
            template: 'password-reset'
        },
        applicationSubmitted: {
            subject: 'X√°c nh·∫≠n n·ªôp h·ªì s∆° x√©t tuy·ªÉn - HUTECH',
            template: 'application-submitted'
        },
        applicationStatusUpdate: {
            subject: 'C·∫≠p nh·∫≠t tr·∫°ng th√°i h·ªì s∆° - HUTECH',
            template: 'application-status-update'
        },
        consultationRequest: {
            subject: 'X√°c nh·∫≠n ƒëƒÉng k√Ω t∆∞ v·∫•n - HUTECH',
            template: 'consultation-request'
        },
        scholarshipApplication: {
            subject: 'X√°c nh·∫≠n ƒëƒÉng k√Ω h·ªçc b·ªïng - HUTECH',
            template: 'scholarship-application'
        },
        profileUpdate: {
            subject: 'C·∫≠p nh·∫≠t th√¥ng tin t√†i kho·∫£n - HUTECH',
            template: 'profile-update'
        }
    },

    // C·∫•u h√¨nh b·∫£o m·∫≠t
    security: {
        // Th·ªùi gian h·∫øt h·∫°n token ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u (ph√∫t)
        passwordResetExpiry: parseInt(process.env.PASSWORD_RESET_EXPIRY) || 60,

        // S·ªë l·∫ßn g·ª≠i email t·ªëi ƒëa trong 1 gi·ªù
        maxEmailsPerHour: parseInt(process.env.MAX_EMAILS_PER_HOUR) || 10,

        // Th·ªùi gian ch·ªù gi·ªØa c√°c l·∫ßn g·ª≠i email (gi√¢y)
        emailCooldown: parseInt(process.env.EMAIL_COOLDOWN) || 60
    },

    // C·∫•u h√¨nh logging
    logging: {
        // Ghi log email
        enableLogging: process.env.EMAIL_LOGGING === 'true' || true,

        // L∆∞u email v√†o database
        saveToDatabase: process.env.EMAIL_SAVE_TO_DB === 'true' || false
    }
};

// H√†m ki·ªÉm tra c·∫•u h√¨nh email
export const validateEmailConfig = () => {
    const requiredFields = [
        'EMAIL_USER',
        'EMAIL_PASSWORD'
    ];

    const missingFields = requiredFields.filter(field => !process.env[field]);

    if (missingFields.length > 0) {
        console.warn('‚ö†Ô∏è Email configuration warning: Missing environment variables:', missingFields);
        console.warn('üìß Email functionality will be disabled. Please set the required environment variables.');
        return false;
    }

    return true;
};

// H√†m l·∫•y c·∫•u h√¨nh email cho m√¥i tr∆∞·ªùng hi·ªán t·∫°i
export const getEmailConfig = () => {
    const isProduction = process.env.NODE_ENV === 'production';

    return {
        ...emailConfig,
        smtp: {
            ...emailConfig.smtp,
            // Trong production, s·ª≠ d·ª•ng c·∫•u h√¨nh b·∫£o m·∫≠t h∆°n
            secure: isProduction ? true : emailConfig.smtp.secure,
            port: isProduction ? 465 : emailConfig.smtp.port
        }
    };
};

export default emailConfig;